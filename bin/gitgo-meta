#!/bin/bash
############################################################################
usage="\
usage: gitgo-meta [-h] [<since>] [<until>]

  Parses commits between the refs for gitgo metadata.

options:

        -h    prints this help

"
############################################################################

while getopts "h" option
do
  case $option in
    h  )  printf "$usage"
          exit 0 ;;
    \? )  printf "$usage" | head -n 1
          exit 2 ;;
  esac
done
shift $(($OPTIND - 1))

if [ x"$GITGO_DEBUG" == x"true" ]
then set -x
fi

a=${1:-gitgo}
b=${2}

############################################################################

# Produce a list of raw gitgo metadata between two refs a..b (as per git-log).
# The output format is:
#
#   commit type value
#
# Where type is one of the gitgo types [+-~:].
meta_data () {
a=$1; b=$2;
git log --format=raw $a${b:+...}$b |
awk '
/^commit /      { n=0; sha=$2; }
/^    ---/      { n=1; }
/^    [+-~:] /  { store_meta() }
/^$/            { print_meta() }
END             { print_meta() }

function store_meta () {
  if ( n > 0 ) meta[n++] = $0
}
function print_meta() {
  if ( n > 0 ) {
    for (i=n-1; i>0; i--) {
      sub("    ", "", meta[i])
      printf "%s %s\n", sha, meta[i]
    }
    printf "%s . %s\n", sha, sha
  }
}
'
}

############################################################################

meta_data $a $b
