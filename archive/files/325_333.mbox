From news@gmane.org Tue Mar 04 03:33:20 2003
From: "Zed A. Shaw" <zedshaw@zedshaw.com>
Subject: Introductions
Date: Sat, 16 Apr 2005 12:50:15 -0400
Organization: ZedShaw.com
Lines: 50
Message-ID: <1113670215.6025.36.camel@thamachine>
Reply-To: zedshaw@zedshaw.com
Mime-Version: 1.0
Content-Type: text/plain
Content-Transfer-Encoding: 7bit
X-From: git-owner@vger.kernel.org Sat Apr 16 18:48:54 2005
Return-path: <git-owner@vger.kernel.org>
Received: from vger.kernel.org ([12.107.209.244])
	by ciao.gmane.org with esmtp (Exim 4.43)
	id 1DMqT0-0002l9-CM
	for gcvg-git@gmane.org; Sat, 16 Apr 2005 18:48:22 +0200
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S262703AbVDPQvt (ORCPT <rfc822;gcvg-git@m.gmane.org>);
	Sat, 16 Apr 2005 12:51:49 -0400
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S262702AbVDPQvt
	(ORCPT <rfc822;git-outgoing>); Sat, 16 Apr 2005 12:51:49 -0400
Received: from smtp04.mrf.mail.rcn.net ([207.172.4.63]:11930 "EHLO
	smtp04.mrf.mail.rcn.net") by vger.kernel.org with ESMTP
	id S262703AbVDPQvQ (ORCPT <rfc822;git@vger.kernel.org>);
	Sat, 16 Apr 2005 12:51:16 -0400
Received: from 207-237-211-198.c3-0.80w-ubr3.nyr-80w.ny.cable.rcn.com (HELO mythtv) (207.237.211.198)
  by smtp04.mrf.mail.rcn.net with ESMTP; 16 Apr 2005 12:51:16 -0400
X-IronPort-AV: i="3.92,106,1112587200"; 
   d="scan'208"; a="23176828:sNHT20447004"
To: git@vger.kernel.org
X-Mailer: Evolution 2.2.1.1 
Sender: git-owner@vger.kernel.org
Precedence: bulk
X-Mailing-List: git@vger.kernel.org
Status: RO

Hi,

Just a short message to introduce myself and give a shameless plug.  I'm
Zed A. Shaw and I'm the author of a little unknown SCM called FastCST
(http://www.zedshaw.com/projects/fastcst ).  While I doubt that Linus
would ever adopt fastcst as his tool (and I probably wouldn't want him
too since it's not quite ready for prime time) I did find many of the
discussions on the list so far very interesting.

Some sent me Linus' message about wanting to do a diff on the whole
source tree, and just thought I'd mention that I already tried this in
FastCST.  FastCST uses a suffix array to construct a delta (not a diff),
so I thought it might be possible to simply apply the delta algorithm to
the entire source tree and get very small changesets.

It worked on small source trees, but when it came to the Linux 2.6 tree
it choked hard.  Even with an efficient suffix array implementation,
you're talking about performing a diff/delta on 225M of source.  Added
to the problem is that you have to track file locations within the
massive blob.  In the end, it also wasn't much more efficient from a
size/space/time perspective so I dropped it.

My current solution to Linus' problem is to use an inverted index to
process all the sources and revisions on the fly as they are created.
Using the inverted index, I'm able to VERY quickly find any chunk of
source in files or revisions.  This lets me track things like how
functions move through the files, where chunks of code moved to, etc.
In the end this turns out to be much more efficient (7 seconds on my
computer to find all references to "sprintf" in the Linux 2.6 source) as
I can use the super small deltas for distributing changes, and give
developers a means tracking content changes across "the world" in a
simple search format.

Anyway, just thought I'd throw in my experiences attempting what Linus
is talking about.  I actually agree with him that rename tracking isn't
that great, but I've come to the conclusion that tracking renames is
actually a specific case of just a general search problem.  Different
strokes for different folks I guess.

Other than that, I'm mostly interested in reading the messages and
probably won't write anything unless people ask me directly for
something.  Thanks!

Zed A. Shaw

-
To unsubscribe from this list: send the line "unsubscribe git" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html



From news@gmane.org Tue Mar 04 03:33:20 2003
From: Rene Scharfe <rene.scharfe@lsrfire.ath.cx>
Subject: git-pasky: gitXnormid.sh overhaul
Date: Sat, 16 Apr 2005 18:51:29 +0200
Lines: 121
Message-ID: <20050416165129.GA13152@lsrfire.ath.cx>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Cc: git@vger.kernel.org
X-From: git-owner@vger.kernel.org Sat Apr 16 18:49:05 2005
Return-path: <git-owner@vger.kernel.org>
Received: from vger.kernel.org ([12.107.209.244])
	by ciao.gmane.org with esmtp (Exim 4.43)
	id 1DMqTW-0002o3-1b
	for gcvg-git@gmane.org; Sat, 16 Apr 2005 18:48:54 +0200
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S262706AbVDPQwb (ORCPT <rfc822;gcvg-git@m.gmane.org>);
	Sat, 16 Apr 2005 12:52:31 -0400
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S262702AbVDPQwa
	(ORCPT <rfc822;git-outgoing>); Sat, 16 Apr 2005 12:52:30 -0400
Received: from neapel230.server4you.de ([217.172.187.230]:42924 "EHLO
	neapel230.server4you.de") by vger.kernel.org with ESMTP
	id S262701AbVDPQvf (ORCPT <rfc822;git@vger.kernel.org>);
	Sat, 16 Apr 2005 12:51:35 -0400
Received: by neapel230.server4you.de (Postfix, from userid 1000)
	id 94EDD222; Sat, 16 Apr 2005 18:51:29 +0200 (CEST)
To: Petr Baudis <pasky@ucw.cz>
Content-Disposition: inline
User-Agent: Mutt/1.5.6+20040907i
Sender: git-owner@vger.kernel.org
Precedence: bulk
X-Mailing-List: git@vger.kernel.org
Status: RO

Hello,

I just couldn't stand all the calls to grep and other external tools in
gitXnormid.sh and started rewriting it in a knee-jerk reaction.

You said in a private conversation that you don't like to include things
like ${var#stuff} to stay "sh compatible", while OTOH you favour $(cmd)
over `cmd`.  Both are POSIX extensions of the classical Bourne Shell
syntax (see e.g. http://docs.hp.com/en/B2355-90046/ch15s03.html for a
feature comparision between POSIX shell, Bourne Shell and Korn Shells on
HP-UX).  For reference, The Open Group publishes its IEEE Std 1003.1
standard (vulgo: POSIX) on this website:
http://www.opengroup.org/onlinepubs/009695399/toc.htm.  So which shell
do you want to target with your git scripts?

This time I tested the script. :]  It copes with invalid IDs,
non-existing valid IDs, abbreviated IDs, an omitted ID, valid IDs, with
tags and branch names.  I also made sure the script runs with bash, ash,
pdksh, zsh and bash --posix (all on SuSE 9.2).

I changed the way an ID is verified.  The script now tries to find tags
and branches first by looking for .git/tags/<id> and .git/HEAD.<id> and
after that looking inside .git/objects for a match.  That's faster and
now I can safely give a branch a name consisting of 40 hex digits. :-)

The script follows in plain text format, not as a patch.  Your and my
version share only very few lines, so this way it's easier to review.
I'll send you a patch if and when you're ready to apply it, ok?

Thanks,
Rene


--- 8< ---
#!/bin/sh
#
# Internal: Normalize the given ID to a tree ID.
# Copyright (c) Petr Baudis, 2005
#
# Takes an arbitrary ID as a parameter. -c tells it to give
# a commit id rather than tree id.

usage() {
	echo "Usage: $0 [-c] [tree-id | commit-id | tag | branch]"
	exit 2
}

get_first_word() {
	if read one two; then
		echo "$one"
		return 0
	fi
	return 1
}

expand_hash() {
	hashdir=${SHA1_FILE_DIRECTORY:-.git/objects}
	filename=${1#??}
	dirname=${1%${filename}}
	first=true
	for file in "${hashdir}/${dirname}/${filename}"*; do
		[ -f "$file" ] || return 1
		if $first; then
			hash=${dirname}${file##*/}
			first=false
		else
			return 1
		fi
	done
	$first && return 1
	echo "$hash"
}

get_tree_id() {
	cat-file commit "$1" | while read tag hash; do
		if [ "$tag" = "tree" ]; then
			echo "$hash"
			return
		fi
	done
}

type=tree
case "$1" in
-c) type=commit; shift;;
-*) usage;;
esac

if [ ! "$1" ]; then
	if [ ! -f ".git/HEAD" ]; then
		echo "$0: file .git/HEAD not found"
		usage
	fi
	id=$(get_first_word <".git/HEAD")
elif [ -f ".git/tags/$1" ]; then
	id=$(get_first_word <".git/tags/$1")
elif [ -f ".git/HEAD.$1" ]; then
	id=$(get_first_word <".git/HEAD.$1")
else
	id=$(expand_hash "$1")
fi
if [ $? != 0 ]; then
	echo "$0: invalid ID: $1" >&2
	exit 1
fi

if [ "$type" = "tree" ]; then
	tree_id=$(get_tree_id "$id" 2>/dev/null)
	[ "$tree_id" ] && id=$tree_id
fi

if [ $(cat-file -t "$id") != "$type" ]; then
	echo "$0: invalid ID: $id" >&2
	exit 1
fi
echo "$id"
-
To unsubscribe from this list: send the line "unsubscribe git" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html



From news@gmane.org Tue Mar 04 03:33:20 2003
From: Linus Torvalds <torvalds@osdl.org>
Subject: Re: full kernel history, in patchset format
Date: Sat, 16 Apr 2005 10:04:31 -0700 (PDT)
Lines: 57
Message-ID: <Pine.LNX.4.58.0504160953310.7211@ppc970.osdl.org>
References: <20050416131528.GB19908@elte.hu>
Mime-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Cc: git@vger.kernel.org
X-From: git-owner@vger.kernel.org Sat Apr 16 18:59:40 2005
Return-path: <git-owner@vger.kernel.org>
Received: from vger.kernel.org ([12.107.209.244])
	by ciao.gmane.org with esmtp (Exim 4.43)
	id 1DMqdO-0003hC-2l
	for gcvg-git@gmane.org; Sat, 16 Apr 2005 18:59:06 +0200
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S262701AbVDPRCn (ORCPT <rfc822;gcvg-git@m.gmane.org>);
	Sat, 16 Apr 2005 13:02:43 -0400
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S262702AbVDPRCn
	(ORCPT <rfc822;git-outgoing>); Sat, 16 Apr 2005 13:02:43 -0400
Received: from fire.osdl.org ([65.172.181.4]:19586 "EHLO smtp.osdl.org")
	by vger.kernel.org with ESMTP id S262701AbVDPRCj (ORCPT
	<rfc822;git@vger.kernel.org>); Sat, 16 Apr 2005 13:02:39 -0400
Received: from shell0.pdx.osdl.net (fw.osdl.org [65.172.181.6])
	by smtp.osdl.org (8.12.8/8.12.8) with ESMTP id j3GH2Ys4028007
	(version=TLSv1/SSLv3 cipher=EDH-RSA-DES-CBC3-SHA bits=168 verify=NO);
	Sat, 16 Apr 2005 10:02:35 -0700
Received: from localhost (shell0.pdx.osdl.net [10.9.0.31])
	by shell0.pdx.osdl.net (8.13.1/8.11.6) with ESMTP id j3GH2XuE020570;
	Sat, 16 Apr 2005 10:02:34 -0700
To: Ingo Molnar <mingo@elte.hu>
In-Reply-To: <20050416131528.GB19908@elte.hu>
X-Spam-Status: No, hits=0 required=5 tests=
X-Spam-Checker-Version: SpamAssassin 2.63-osdl_revision__1.35__
X-MIMEDefang-Filter: osdl$Revision: 1.109 $
X-Scanned-By: MIMEDefang 2.36
Sender: git-owner@vger.kernel.org
Precedence: bulk
X-Mailing-List: git@vger.kernel.org
Status: RO



On Sat, 16 Apr 2005, Ingo Molnar wrote:
> 
> i've converted the Linux kernel CVS tree into 'flat patchset' format, 
> which gave a series of 28237 separate patches. (Each patch represents a 
> changeset, in the order they were applied. I've used the cvsps utility.)
> 
> the history data starts at 2.4.0 and ends at 2.6.12-rc2. I've included a 
> script that will apply all the patches in order and will create a 
> pristine 2.6.12-rc2 tree.

Hey, that's great. I got the CVS repo too, and I was looking at it, but 
the more I looked at it, the more I felt that the main reason I want to 
import it into git ends up being to validate that my size estimates are at 
all realistic.

I see that Thomas Gleixner seems to have done that already, and come to a 
figure of 3.2GB for the last three years, which I'm very happy with, 
mainly because it seems to match my estimates to a tee. Which means that I 
just feel that much more confident about git actually being able to handle 
the kernel long-term, and not just as a stop-gap measure.

But I wonder if we actually want to actually populate the whole history.. 
Now that my size estimates have been verified, I have little actual real 
reason to put the history into git. There are no visualization tools done 
for git yet, and no helpers to actually find problems, and by the time 
there will be, we'll have new history.

So I'd _almost_ suggest just starting from a clean slate after all.  
Keeping the old history around, of course, but not necessarily putting it
into git now. It would just force everybody who is getting used to git in 
the first place to work with a 3GB archive from day one, rather than 
getting into it a bit more gradually.

What do people think? I'm not so much worried about the data itself: the
git architecture is _so_ damn simple that now that the size estimate has
been confirmed, that I don't think it would be a problem per se to put
3.2GB into the archive. But it will bog down "rsync" horribly, so it will
actually hurt synchronization untill somebody writes the rev-tree-like
stuff to communicate changes more efficiently..

IOW, it smells to me like we don't have the infrastructure to really work 
with 3GB archives, and that if we start from scratch (2.6.12-rc2), we can 
build up the infrastructure in parallell with starting to really need it.

But it's _great_ to have the history in this format, especially since 
looking at CVS just reminded me how much I hated it.

Comments?

		Linus
-
To unsubscribe from this list: send the line "unsubscribe git" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html



From news@gmane.org Tue Mar 04 03:33:20 2003
From: Junio C Hamano <junkio@cox.net>
Subject: Re: [PATCH 3/2] merge-trees script for Linus git
Date: Sat, 16 Apr 2005 10:14:29 -0700
Lines: 18
Message-ID: <7v64ym8wzu.fsf@assigned-by-dhcp.cox.net>
References: <Pine.LNX.4.58.0504140201130.7211@ppc970.osdl.org>
	<20050414193507.GA22699@pasky.ji.cz>
	<7vmzs1osv1.fsf@assigned-by-dhcp.cox.net>
	<20050414233159.GX22699@pasky.ji.cz>
	<7v7jj4q2j2.fsf@assigned-by-dhcp.cox.net>
	<20050414223039.GB28082@64m.dyndns.org>
	<7vfyxsmqmk.fsf@assigned-by-dhcp.cox.net>
	<20050415062807.GA29841@64m.dyndns.org>
	<7vfyxsi9bq.fsf@assigned-by-dhcp.cox.net>
	<7vaco0i3t9.fsf_-_@assigned-by-dhcp.cox.net>
	<Pine.LNX.4.58.0504151138490.7211@ppc970.osdl.org>
	<7vmzrzhkd3.fsf@assigned-by-dhcp.cox.net>
	<7vfyxrhfsw.fsf_-_@assigned-by-dhcp.cox.net>
	<7vmzrzfwe4.fsf_-_@assigned-by-dhcp.cox.net>
	<Pine.LNX.4.58.0504151755590.7211@ppc970.osdl.org>
	<7v7jj3fjky.fsf@assigned-by-dhcp.cox.net>
	<Pine.LNX.4.58.0504152152580.7211@ppc970.osdl.org>
	<Pine.LNX.4.58.0504152256520.7211@ppc970.osdl.org>
	<7vis2ncf8j.fsf@assigned-by-dhcp.cox.net>
	<Pine.LNX.4.58.0504160820320.72
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Cc: git@vger.kernel.org
X-From: git-owner@vger.kernel.org Sat Apr 16 19:12:06 2005
Return-path: <git-owner@vger.kernel.org>
Received: from vger.kernel.org ([12.107.209.244])
	by ciao.gmane.org with esmtp (Exim 4.43)
	id 1DMqpm-0004ur-RJ
	for gcvg-git@gmane.org; Sat, 16 Apr 2005 19:11:55 +0200
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S262707AbVDPRO7 (ORCPT <rfc822;gcvg-git@m.gmane.org>);
	Sat, 16 Apr 2005 13:14:59 -0400
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S262705AbVDPRO6
	(ORCPT <rfc822;git-outgoing>); Sat, 16 Apr 2005 13:14:58 -0400
Received: from fed1rmmtao04.cox.net ([68.230.241.35]:35999 "EHLO
	fed1rmmtao04.cox.net") by vger.kernel.org with ESMTP
	id S262708AbVDPROd (ORCPT <rfc822;git@vger.kernel.org>);
	Sat, 16 Apr 2005 13:14:33 -0400
Received: from assigned-by-dhcp.cox.net ([68.4.60.172])
          by fed1rmmtao04.cox.net
          (InterMail vM.6.01.04.00 201-2131-118-20041027) with ESMTP
          id <20050416171430.FEWB15592.fed1rmmtao04.cox.net@assigned-by-dhcp.cox.net>;
          Sat, 16 Apr 2005 13:14:30 -0400
To: Linus Torvalds <torvalds@osdl.org>
In-Reply-To: <Pine.LNX.4.58.0504160928250.7211@ppc970.osdl.org> (Linus
 Torvalds's message of "Sat, 16 Apr 2005 09:36:25 -0700 (PDT)")
User-Agent: Gnus/5.1007 (Gnus v5.10.7) Emacs/21.4 (gnu/linux)
Sender: git-owner@vger.kernel.org
Precedence: bulk
X-Mailing-List: git@vger.kernel.org
Status: RO

>>>>> "LT" == Linus Torvalds <torvalds@osdl.org> writes:

LT> Anyway, with the modified read-tree, as far as I can tell it will now 
LT> merge all the cases where one side has done something to a file, and the 
LT> other side has left it alone (or where both sides have done the exact same 
LT> modification). That should _really_ cut down the cases to just a few files 
LT> for most of the kernel merges I can think of. 

LT> Does it do the right thing for your tests?

Yes.


-
To unsubscribe from this list: send the line "unsubscribe git" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html



From news@gmane.org Tue Mar 04 03:33:20 2003
From: Martin Uecker <muecker@gmx.de>
Subject: Re: space compression (again)
Date: Sat, 16 Apr 2005 19:37:02 +0200
Lines: 74
Message-ID: <20050416173702.GA12605@macavity>
References: <Pine.LNX.4.61.0504151232160.27637@cag.csail.mit.edu> <Pine.LNX.4.58.0504151117360.7211@ppc970.osdl.org> <Pine.LNX.4.61.0504151437100.27637@cag.csail.mit.edu> <Pine.LNX.4.58.0504151210590.7211@ppc970.osdl.org> <20050416143905.GA10370@macavity> <Pine.LNX.4.61.0504161101470.29343@cag.csail.mit.edu>
Mime-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha1;
	protocol="application/pgp-signature"; boundary="7AUc2qLy4jB3hD7Z"
X-From: git-owner@vger.kernel.org Sat Apr 16 19:35:22 2005
Return-path: <git-owner@vger.kernel.org>
Received: from vger.kernel.org ([12.107.209.244])
	by ciao.gmane.org with esmtp (Exim 4.43)
	id 1DMrCE-0006rY-KU
	for gcvg-git@gmane.org; Sat, 16 Apr 2005 19:35:06 +0200
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S262710AbVDPRin (ORCPT <rfc822;gcvg-git@m.gmane.org>);
	Sat, 16 Apr 2005 13:38:43 -0400
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S262709AbVDPRim
	(ORCPT <rfc822;git-outgoing>); Sat, 16 Apr 2005 13:38:42 -0400
Received: from dialin-145-254-144-203.arcor-ip.net ([145.254.144.203]:3969
	"EHLO macavity") by vger.kernel.org with ESMTP id S262710AbVDPRiX
	(ORCPT <rfc822;git@vger.kernel.org>);
	Sat, 16 Apr 2005 13:38:23 -0400
Received: from martin by macavity with local (Exim 4.34)
	id 1DMrE6-0003Nc-Kf
	for git@vger.kernel.org; Sat, 16 Apr 2005 19:37:02 +0200
To: git@vger.kernel.org
Mail-Followup-To: Martin Uecker <muecker@gmx.de>, git@vger.kernel.org
Content-Disposition: inline
In-Reply-To: <Pine.LNX.4.61.0504161101470.29343@cag.csail.mit.edu>
User-Agent: Mutt/1.5.6+20040907i
Sender: git-owner@vger.kernel.org
Precedence: bulk
X-Mailing-List: git@vger.kernel.org
Status: RO


--7AUc2qLy4jB3hD7Z
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

On Sat, Apr 16, 2005 at 11:11:00AM -0400, C. Scott Ananian wrote:
> On Sat, 16 Apr 2005, Martin Uecker wrote:
>=20
> >The right thing (TM) is to switch from SHA1 of compressed
> >content for the complete monolithic file to a merkle hash tree
> >of the uncompressed content. This would make the hash
> >independent of the actual storage method (chunked or not).
>=20
> It would certainly be nice to change to a hash of the uncompressed=20
> content, rather than a hash of the compressed content, but it's not=20
> strictly necessary, since files are fetched all at once: there's not 'rea=
d=20
> subrange' operation on blobs.
>=20
> I assume 'merkle hash tree' is talking about:
>   http://www.open-content.net/specs/draft-jchapweske-thex-02.html
> ..which is very interesting, but not quite what I was thinking.
> The merkle hash approach seems to require fixed chunk boundaries.

I don't know what is written there, but I don't
consider fixed chunk boundaries part of the definition.

> The rsync approach does not use fixed chunk boundaries; this is necessary=
=20
> to ensure good storage reuse for the expected case (ie; inserting a singl=
e=20
> line at the start or in the middle of the file, which changes all the=20
> chunk boundaries).

Yes. The chunk boundaries should be determined deterministically
=66rom local properties of the data. Use a rolling checksum over
some small window and split the file it it hits a special value (0).
This is what the rsyncable patch to zlib does.

> Further, in the absence of subrange reads on blobs, it's not entirely=20
> clear what using a merkle hash would buy you.

The whole design of git is a hash tree. If you extend
this tree structure into files you end up with merkle
hash trees. Everything else is just more complicated.

Martin
=20

--=20
One night, when little Giana from Milano was fast asleep,
she had a strange dream.


--7AUc2qLy4jB3hD7Z
Content-Type: application/pgp-signature; name="signature.asc"
Content-Description: Digital signature
Content-Disposition: inline

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.5 (GNU/Linux)

iD8DBQFCYU0+YDJInvULMKYRAokvAJ4ui2II+aceTEz84ev3rEgLBBRejQCdEPOT
BaIevBldK7QOi3CxFL0jk68=
=EYGx
-----END PGP SIGNATURE-----

--7AUc2qLy4jB3hD7Z--
-
To unsubscribe from this list: send the line "unsubscribe git" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html



From news@gmane.org Tue Mar 04 03:33:20 2003
From: Petr Baudis <pasky@ucw.cz>
Subject: Re: Re: full kernel history, in patchset format
Date: Sat, 16 Apr 2005 19:43:27 +0200
Lines: 26
Message-ID: <20050416174327.GG19099@pasky.ji.cz>
References: <20050416131528.GB19908@elte.hu> <Pine.LNX.4.58.0504160953310.7211@ppc970.osdl.org>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Cc: Ingo Molnar <mingo@elte.hu>, git@vger.kernel.org
X-From: git-owner@vger.kernel.org Sat Apr 16 19:40:02 2005
Return-path: <git-owner@vger.kernel.org>
Received: from vger.kernel.org ([12.107.209.244])
	by ciao.gmane.org with esmtp (Exim 4.43)
	id 1DMrGp-0007C7-Mm
	for gcvg-git@gmane.org; Sat, 16 Apr 2005 19:39:51 +0200
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S262709AbVDPRnb (ORCPT <rfc822;gcvg-git@m.gmane.org>);
	Sat, 16 Apr 2005 13:43:31 -0400
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S262713AbVDPRnb
	(ORCPT <rfc822;git-outgoing>); Sat, 16 Apr 2005 13:43:31 -0400
Received: from w241.dkm.cz ([62.24.88.241]:13186 "HELO machine.sinus.cz")
	by vger.kernel.org with SMTP id S262709AbVDPRn3 (ORCPT
	<rfc822;git@vger.kernel.org>); Sat, 16 Apr 2005 13:43:29 -0400
Received: (qmail 863 invoked by uid 2001); 16 Apr 2005 17:43:27 -0000
To: Linus Torvalds <torvalds@osdl.org>
Content-Disposition: inline
In-Reply-To: <Pine.LNX.4.58.0504160953310.7211@ppc970.osdl.org>
User-Agent: Mutt/1.4i
X-message-flag: Outlook : A program to spread viri, but it can do mail too.
Sender: git-owner@vger.kernel.org
Precedence: bulk
X-Mailing-List: git@vger.kernel.org
Status: RO

Dear diary, on Sat, Apr 16, 2005 at 07:04:31PM CEST, I got a letter
where Linus Torvalds <torvalds@osdl.org> told me that...
> So I'd _almost_ suggest just starting from a clean slate after all.  
> Keeping the old history around, of course, but not necessarily putting it
> into git now. It would just force everybody who is getting used to git in 
> the first place to work with a 3GB archive from day one, rather than 
> getting into it a bit more gradually.
> 
> Comments?

FWIW, it looks pretty reasonable to me. Perhaps we should have a
separate GIT repository with the previous history though, and in the
first new commit the parent could point to the last commit from the
other repository.

Just if it isn't too much work, though. :-)

-- 
				Petr "Pasky" Baudis
Stuff: http://pasky.or.cz/
C++: an octopus made by nailing extra legs onto a dog. -- Steve Taylor
-
To unsubscribe from this list: send the line "unsubscribe git" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html



From news@gmane.org Tue Mar 04 03:33:20 2003
From: Thomas Gleixner <tglx@linutronix.de>
Subject: Re: full kernel history, in patchset format
Date: Sat, 16 Apr 2005 21:23:40 +0200
Lines: 45
Message-ID: <1113679421.28612.16.camel@tglx.tec.linutronix.de>
References: <20050416131528.GB19908@elte.hu>
	 <Pine.LNX.4.58.0504160953310.7211@ppc970.osdl.org>
Reply-To: tglx@linutronix.de
Mime-Version: 1.0
Content-Type: text/plain
Content-Transfer-Encoding: 7bit
Cc: Ingo Molnar <mingo@elte.hu>, git@vger.kernel.org
X-From: git-owner@vger.kernel.org Sat Apr 16 20:20:28 2005
Return-path: <git-owner@vger.kernel.org>
Received: from vger.kernel.org ([12.107.209.244])
	by ciao.gmane.org with esmtp (Exim 4.43)
	id 1DMrtp-000201-9b
	for gcvg-git@gmane.org; Sat, 16 Apr 2005 20:20:09 +0200
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S262717AbVDPSXt (ORCPT <rfc822;gcvg-git@m.gmane.org>);
	Sat, 16 Apr 2005 14:23:49 -0400
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S262718AbVDPSXt
	(ORCPT <rfc822;git-outgoing>); Sat, 16 Apr 2005 14:23:49 -0400
Received: from 213-239-205-147.clients.your-server.de ([213.239.205.147]:60856
	"EHLO mail.tglx.de") by vger.kernel.org with ESMTP id S262717AbVDPSXr
	(ORCPT <rfc822;git@vger.kernel.org>);
	Sat, 16 Apr 2005 14:23:47 -0400
Received: from mail.tec.linutronix.de (213-239-205-147.clients.your-server.de [213.239.205.147])
	by mail.tglx.de (Postfix) with ESMTP id 9F25865C003;
	Sat, 16 Apr 2005 20:22:33 +0200 (CEST)
Received: from tglx.tec.linutronix.de (tglx.tec.linutronix.de [192.168.0.68])
	by mail.tec.linutronix.de (Postfix) with ESMTP id 046B328222;
	Sat, 16 Apr 2005 20:23:41 +0200 (CEST)
To: Linus Torvalds <torvalds@osdl.org>
In-Reply-To: <Pine.LNX.4.58.0504160953310.7211@ppc970.osdl.org>
X-Mailer: Evolution 2.0.3 (2.0.3-2) 
Sender: git-owner@vger.kernel.org
Precedence: bulk
X-Mailing-List: git@vger.kernel.org
Status: RO

On Sat, 2005-04-16 at 10:04 -0700, Linus Torvalds wrote:

> So I'd _almost_ suggest just starting from a clean slate after all.  
> Keeping the old history around, of course, but not necessarily putting it
> into git now. It would just force everybody who is getting used to git in 
> the first place to work with a 3GB archive from day one, rather than 
> getting into it a bit more gradually.

Sure. We can export the 2.6.12-rc2 version of the git'ed history tree
and start from there. Then the first changeset has a parent, which just
lives in a different place. 
Thats the only difference to your repository, but it would change the
sha1 sums of all your changesets.

> What do people think? I'm not so much worried about the data itself: the
> git architecture is _so_ damn simple that now that the size estimate has
> been confirmed, that I don't think it would be a problem per se to put
> 3.2GB into the archive. But it will bog down "rsync" horribly, so it will
> actually hurt synchronization untill somebody writes the rev-tree-like
> stuff to communicate changes more efficiently..

We have all the tracking information in SQL and we will post the data
base dump soon, so people interested in revision tracking can use this
as an information base.

> But it's _great_ to have the history in this format, especially since 
> looking at CVS just reminded me how much I hated it.

:)

One remark on the tree blob storage format. 
The binary storage of the sha1sum of the refered object is a PITA for
scripting. 
Converting the ASCII -> binary for the sha1sum comparision should not
take much longer than the binary -> ASCII conversion for the file
reference. Can this be changed ?

tglx


-
To unsubscribe from this list: send the line "unsubscribe git" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html



From news@gmane.org Tue Mar 04 03:33:20 2003
From: Junio C Hamano <junkio@cox.net>
Subject: Re: full kernel history, in patchset format
Date: Sat, 16 Apr 2005 11:31:26 -0700
Lines: 106
Message-ID: <7vmzry7ev5.fsf@assigned-by-dhcp.cox.net>
References: <20050416131528.GB19908@elte.hu>
	<Pine.LNX.4.58.0504160953310.7211@ppc970.osdl.org>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Cc: Ingo Molnar <mingo@elte.hu>, git@vger.kernel.org
X-From: git-owner@vger.kernel.org Sat Apr 16 20:28:09 2005
Return-path: <git-owner@vger.kernel.org>
Received: from vger.kernel.org ([12.107.209.244])
	by ciao.gmane.org with esmtp (Exim 4.43)
	id 1DMs1L-0002Z2-8y
	for gcvg-git@gmane.org; Sat, 16 Apr 2005 20:27:55 +0200
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S262718AbVDPSbf (ORCPT <rfc822;gcvg-git@m.gmane.org>);
	Sat, 16 Apr 2005 14:31:35 -0400
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S262719AbVDPSbf
	(ORCPT <rfc822;git-outgoing>); Sat, 16 Apr 2005 14:31:35 -0400
Received: from fed1rmmtao11.cox.net ([68.230.241.28]:14018 "EHLO
	fed1rmmtao11.cox.net") by vger.kernel.org with ESMTP
	id S262718AbVDPSba (ORCPT <rfc822;git@vger.kernel.org>);
	Sat, 16 Apr 2005 14:31:30 -0400
Received: from assigned-by-dhcp.cox.net ([68.4.60.172])
          by fed1rmmtao11.cox.net
          (InterMail vM.6.01.04.00 201-2131-118-20041027) with ESMTP
          id <20050416183127.CJLE22013.fed1rmmtao11.cox.net@assigned-by-dhcp.cox.net>;
          Sat, 16 Apr 2005 14:31:27 -0400
To: Linus Torvalds <torvalds@osdl.org>
In-Reply-To: <Pine.LNX.4.58.0504160953310.7211@ppc970.osdl.org> (Linus
 Torvalds's message of "Sat, 16 Apr 2005 10:04:31 -0700 (PDT)")
User-Agent: Gnus/5.1007 (Gnus v5.10.7) Emacs/21.4 (gnu/linux)
Sender: git-owner@vger.kernel.org
Precedence: bulk
X-Mailing-List: git@vger.kernel.org
Status: RO

>>>>> "LT" == Linus Torvalds <torvalds@osdl.org> writes:

LT> What do people think? I'm not so much worried about the data itself: the
LT> git architecture is _so_ damn simple that now that the size estimate has
LT> been confirmed, that I don't think it would be a problem per se to put
LT> 3.2GB into the archive. But it will bog down "rsync" horribly, so it will
LT> actually hurt synchronization untill somebody writes the rev-tree-like
LT> stuff to communicate changes more efficiently..

LT> IOW, it smells to me like we don't have the infrastructure to really work 
LT> with 3GB archives, and that if we start from scratch (2.6.12-rc2), we can 
LT> build up the infrastructure in parallell with starting to really need it.

LT> But it's _great_ to have the history in this format, especially since 
LT> looking at CVS just reminded me how much I hated it.

LT> Comments?

I have been cooking this idea before I dove into the merge stuff
and did not have time to implement it myself (Hint Hint), but I
think something along the following lines would work nicely:

 * A script git-archive-tar is used to create a "base tarball"
   that roughly corresponds to "linux-*.tar.gz".  This works as
   follows:

    $ git-archive-tar C [B1 B2...]

   This reads the named commit C, grabs the associated tree
   (i.e.  its sub-tree objects and the blob they refer to), and
   makes a tarball of ??/??????????????????????????????????????
   files.  The tarball does not have to contain any extra
   information to reproduce any ancestor of the named commit.

   When extra parameters, B1 B2..., are given, it also creates
   "diff package" that roughly corresponds to "patch-*.gz" for
   each Bn given.  They must be ancestors of commit.  The
   intention is to store enough information to ensure that the
   recipient can recreate all the SHA1 files "base tarball" for
   commits between (Bn, C] would contain, provided if the
   recipient already has all the SHA1 files "base tarball" for
   Bn.

 * A script git-archive-patch is used to read such a "diff
   package".

So a user needs to:

 * First pick some baseline B and download the base tarball for
   commit B.  It is up to him to make trade-offs between how far
   back he wants to see the history and how much bandwidth he
   wants to waste.  Untar it to get the baseline.

 * Then periodically pick up "diff package" for (C, B] where C
   is the latest available.  Run git-archive-patch to populate
   the rest.

 * In addition the user can run rsync with timestamp option to
   pick up SHA1 files created upstream since C after this
   happens.

What git-archive-tar needs to do to produce "diff package" for
(Bn, C] is fairly obvious.

 * From rev-tree output, find all the commits that are on path
   from Bn to C.

 * Find all the SHA1 objects that appear on this commit chain;
   subtract what is in Bn since we assume the recipient has them
   already.

 * Run diff-tree between neighboring commits [*1*] to find out
   the set of blobs that are "related".  Extract those related
   blobs and run "diff" [*2*] between them to see if it produces
   a patch smaller than the whole thing when compressed.  If
   diff+patch is a win, then we do not have to transmit the blob
   that we could reproduce by sending the diff.  Note that fact.

 * When you are all done, you have a single patch file that
   contains small edits on numerous blobs, and set of SHA1 files
   that are cheaper to transmit than in the patch form.
   Compress the patch file and package them together to make a
   tar archive.

Given the above, the operation of git-archive-patch is also
quite obvious.  Extract the "diff package" tarball into the
objects/ directory that has (at least) the full Bn, uncompress
the patch file part, and run patch on it. 


[Footnotes]

*1* Alternatively, this diff-tree can be run between Bn and each
commit between (Bn, C].  It is like incremental dump strategy.
We should experiment and find a good balance.

*2* This does not have to be "diff -u" --- we are assuming the
exact patch so diff -e or xdelta would do.  We should experiment
and find a good diff+patch pair.


-
To unsubscribe from this list: send the line "unsubscribe git" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html



From news@gmane.org Tue Mar 04 03:33:20 2003
From: Petr Baudis <pasky@ucw.cz>
Subject: Re: Re: full kernel history, in patchset format
Date: Sat, 16 Apr 2005 20:32:32 +0200
Lines: 21
Message-ID: <20050416183232.GH19099@pasky.ji.cz>
References: <20050416131528.GB19908@elte.hu> <Pine.LNX.4.58.0504160953310.7211@ppc970.osdl.org> <1113679421.28612.16.camel@tglx.tec.linutronix.de>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Cc: Linus Torvalds <torvalds@osdl.org>, Ingo Molnar <mingo@elte.hu>,
	git@vger.kernel.org
X-From: git-owner@vger.kernel.org Sat Apr 16 20:29:02 2005
Return-path: <git-owner@vger.kernel.org>
Received: from vger.kernel.org ([12.107.209.244])
	by ciao.gmane.org with esmtp (Exim 4.43)
	id 1DMs2J-0002eg-Kn
	for gcvg-git@gmane.org; Sat, 16 Apr 2005 20:28:55 +0200
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S262721AbVDPScg (ORCPT <rfc822;gcvg-git@m.gmane.org>);
	Sat, 16 Apr 2005 14:32:36 -0400
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S262723AbVDPScg
	(ORCPT <rfc822;git-outgoing>); Sat, 16 Apr 2005 14:32:36 -0400
Received: from w241.dkm.cz ([62.24.88.241]:60034 "HELO machine.sinus.cz")
	by vger.kernel.org with SMTP id S262721AbVDPSce (ORCPT
	<rfc822;git@vger.kernel.org>); Sat, 16 Apr 2005 14:32:34 -0400
Received: (qmail 3031 invoked by uid 2001); 16 Apr 2005 18:32:32 -0000
To: Thomas Gleixner <tglx@linutronix.de>
Content-Disposition: inline
In-Reply-To: <1113679421.28612.16.camel@tglx.tec.linutronix.de>
User-Agent: Mutt/1.4i
X-message-flag: Outlook : A program to spread viri, but it can do mail too.
Sender: git-owner@vger.kernel.org
Precedence: bulk
X-Mailing-List: git@vger.kernel.org
Status: RO

Dear diary, on Sat, Apr 16, 2005 at 09:23:40PM CEST, I got a letter
where Thomas Gleixner <tglx@linutronix.de> told me that...
> One remark on the tree blob storage format. 
> The binary storage of the sha1sum of the refered object is a PITA for
> scripting. 
> Converting the ASCII -> binary for the sha1sum comparision should not
> take much longer than the binary -> ASCII conversion for the file
> reference. Can this be changed ?

Huh, you aren't supposed to peek into trees directly. What's wrong with
ls-tree?

-- 
				Petr "Pasky" Baudis
Stuff: http://pasky.or.cz/
C++: an octopus made by nailing extra legs onto a dog. -- Steve Taylor
-
To unsubscribe from this list: send the line "unsubscribe git" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html



