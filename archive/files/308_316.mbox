From news@gmane.org Tue Mar 04 03:33:20 2003
From: David Mansfield <david@cobite.com>
Subject: Re: full kernel history, in patchset format
Date: Sat, 16 Apr 2005 10:55:45 -0400
Lines: 34
Message-ID: <42612771.5000705@cobite.com>
References: <20050416131528.GB19908@elte.hu> <20050416133513.GA21678@elte.hu>
Mime-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Cc: git@vger.kernel.org
X-From: git-owner@vger.kernel.org Sat Apr 16 16:53:02 2005
Return-path: <git-owner@vger.kernel.org>
Received: from vger.kernel.org ([12.107.209.244])
	by ciao.gmane.org with esmtp (Exim 4.43)
	id 1DMofI-0002kt-1q
	for gcvg-git@gmane.org; Sat, 16 Apr 2005 16:52:56 +0200
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S262673AbVDPO4c (ORCPT <rfc822;gcvg-git@m.gmane.org>);
	Sat, 16 Apr 2005 10:56:32 -0400
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S262674AbVDPO4c
	(ORCPT <rfc822;git-outgoing>); Sat, 16 Apr 2005 10:56:32 -0400
Received: from ms-smtp-02-smtplb.rdc-nyc.rr.com ([24.29.109.6]:39596 "EHLO
	ms-smtp-02.rdc-nyc.rr.com") by vger.kernel.org with ESMTP
	id S262673AbVDPO4a (ORCPT <rfc822;git@vger.kernel.org>);
	Sat, 16 Apr 2005 10:56:30 -0400
Received: from [192.168.0.103] (cpe-66-65-159-236.nyc.res.rr.com [66.65.159.236])
	by ms-smtp-02.rdc-nyc.rr.com (8.12.10/8.12.7) with ESMTP id j3GEuMId021843;
	Sat, 16 Apr 2005 10:56:22 -0400 (EDT)
User-Agent: Mozilla Thunderbird 1.0.2 (X11/20050317)
X-Accept-Language: en-us, en
To: Ingo Molnar <mingo@elte.hu>
In-Reply-To: <20050416133513.GA21678@elte.hu>
X-Virus-Scanned: Symantec AntiVirus Scan Engine
Sender: git-owner@vger.kernel.org
Precedence: bulk
X-Mailing-List: git@vger.kernel.org
Status: RO

Ingo Molnar wrote:
> * Ingo Molnar <mingo@elte.hu> wrote:
> 
> 
>>the patches contain all the existing metadata, dates, log messages and 
>>revision history. (What i think is missing is the BK tree merge 
>>information, but i'm not sure we want/need to convert them to GIT.)
> 
> 
> author names are abbreviated, e.g. 'viro' instead of 
> viro@parcelfarce.linux.theplanet.co.uk, and no committer information is 
> included (albeit commiter ought to be Linus in most cases). These are 
> limitations of the BK->CVS gateway i think.
> 

Glad to hear cvsps made it through!  I'm curious what the manual fixups 
required were, except for the binary file issue (logo.gif).

As to the actual email addresses, for more recent patches, the 
Signed-off should help.  For earlier ones, isn't their some script which 
'knows' a bunch of canonical author->email mappings? (the shortlog 
script or something)?

Is the full committer email address actually in the changeset in BK?  If 
so, given that we have the unique id (immutable I believe) of the 
changset, could it be extracted directly from BK?

David

-
To unsubscribe from this list: send the line "unsubscribe git" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html



From news@gmane.org Tue Mar 04 03:33:20 2003
From: Petr Baudis <pasky@ucw.cz>
Subject: Re: git-pasky file mode handling
Date: Sat, 16 Apr 2005 16:56:50 +0200
Lines: 45
Message-ID: <20050416145650.GB19099@pasky.ji.cz>
References: <20050416104559.A12943@flint.arm.linux.org.uk>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Cc: git@vger.kernel.org, torvalds@osdl.org
X-From: git-owner@vger.kernel.org Sat Apr 16 16:53:31 2005
Return-path: <git-owner@vger.kernel.org>
Received: from vger.kernel.org ([12.107.209.244])
	by ciao.gmane.org with esmtp (Exim 4.43)
	id 1DMofk-0002me-0e
	for gcvg-git@gmane.org; Sat, 16 Apr 2005 16:53:24 +0200
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S262675AbVDPO47 (ORCPT <rfc822;gcvg-git@m.gmane.org>);
	Sat, 16 Apr 2005 10:56:59 -0400
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S262676AbVDPO47
	(ORCPT <rfc822;git-outgoing>); Sat, 16 Apr 2005 10:56:59 -0400
Received: from w241.dkm.cz ([62.24.88.241]:1774 "HELO machine.sinus.cz")
	by vger.kernel.org with SMTP id S262675AbVDPO44 (ORCPT
	<rfc822;git@vger.kernel.org>); Sat, 16 Apr 2005 10:56:56 -0400
Received: (qmail 25244 invoked by uid 2001); 16 Apr 2005 14:56:50 -0000
To: Russell King <rmk@arm.linux.org.uk>
Content-Disposition: inline
In-Reply-To: <20050416104559.A12943@flint.arm.linux.org.uk>
User-Agent: Mutt/1.4i
X-message-flag: Outlook : A program to spread viri, but it can do mail too.
Sender: git-owner@vger.kernel.org
Precedence: bulk
X-Mailing-List: git@vger.kernel.org
Status: RO

Dear diary, on Sat, Apr 16, 2005 at 11:45:59AM CEST, I got a letter
where Russell King <rmk@arm.linux.org.uk> told me that...
> Hi,

Hello,

> It seems that there's something weird going on with the file mode
> handling.  Firstly, some files in the git-pasky repository have mode
> 0664 while others have 0644.
> 
> Having pulled from git-pasky a number of times, with Petr's being the
> "tracked" repository, I now find that when I do an update-cache --refresh,
> it complains that the files need updating, despite show-diff showing no
> differences.  Investigating, this appears to be because the file modes
> are wrong for a number of the files.  All my files do not have group
> write.

this is was a problem with git apply, which did not apply mode changes
correctly until recently. If you have no local changes,

	checkout-cache -f -a

should fix this. Hopefully.

> I notice in the changelog what appears to be a dependence on the umask.
> If this is so, please note that git appears to track the file modes,
> and any dependence upon the umask is likely to screw with this tracking.

I personally don't think I like the mode tracking at all. Some people
(Linus?) may want to have group +w. Other people (me) have their default
group as 'users', and I definitively don't want everyone to be able to
write to the files. :-)

I think we should track only whether the file is executable or not.
Linus?

-- 
				Petr "Pasky" Baudis
Stuff: http://pasky.or.cz/
C++: an octopus made by nailing extra legs onto a dog. -- Steve Taylor
-
To unsubscribe from this list: send the line "unsubscribe git" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html



From news@gmane.org Tue Mar 04 03:33:20 2003
From: Thomas Gleixner <tglx@linutronix.de>
Subject: BK -> git export done
Date: Sat, 16 Apr 2005 17:57:26 +0200
Lines: 22
Message-ID: <1113667047.23734.10.camel@tglx.tec.linutronix.de>
Reply-To: tglx@linutronix.de
Mime-Version: 1.0
Content-Type: text/plain
Content-Transfer-Encoding: 7bit
X-From: git-owner@vger.kernel.org Sat Apr 16 16:54:06 2005
Return-path: <git-owner@vger.kernel.org>
Received: from vger.kernel.org ([12.107.209.244])
	by ciao.gmane.org with esmtp (Exim 4.43)
	id 1DMogL-0002p3-C3
	for gcvg-git@gmane.org; Sat, 16 Apr 2005 16:54:01 +0200
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S262674AbVDPO5h (ORCPT <rfc822;gcvg-git@m.gmane.org>);
	Sat, 16 Apr 2005 10:57:37 -0400
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S262677AbVDPO5h
	(ORCPT <rfc822;git-outgoing>); Sat, 16 Apr 2005 10:57:37 -0400
Received: from 213-239-205-147.clients.your-server.de ([213.239.205.147]:54200
	"EHLO mail.tglx.de") by vger.kernel.org with ESMTP id S262674AbVDPO5c
	(ORCPT <rfc822;git@vger.kernel.org>);
	Sat, 16 Apr 2005 10:57:32 -0400
Received: from mail.tec.linutronix.de (213-239-205-147.clients.your-server.de [213.239.205.147])
	by mail.tglx.de (Postfix) with ESMTP id AAE6065C003
	for <git@vger.kernel.org>; Sat, 16 Apr 2005 16:56:19 +0200 (CEST)
Received: from tglx.tec.linutronix.de (tglx.tec.linutronix.de [192.168.0.68])
	by mail.tec.linutronix.de (Postfix) with ESMTP id 9FCEA28222
	for <git@vger.kernel.org>; Sat, 16 Apr 2005 16:57:27 +0200 (CEST)
To: git@vger.kernel.org
X-Mailer: Evolution 2.0.3 (2.0.3-2) 
Sender: git-owner@vger.kernel.org
Precedence: bulk
X-Mailing-List: git@vger.kernel.org
Status: RO

Hi folks,

I managed finally to export the complete kernel history into git format
The resulting number of objects is ~ 500000
The required disk space is ~ 3.2 GiB

We also tracked the blob/tree/commit references in a SQL database. We
will post a SQL dump when the database is in a bit better shape. This
should make history tracking quite simple.

I currently figure out a way to post the data. My poor DSL line is a bit
too slow :)

tglx



-
To unsubscribe from this list: send the line "unsubscribe git" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html



From news@gmane.org Tue Mar 04 03:33:20 2003
From: "C. Scott Ananian" <cscott@cscott.net>
Subject: Re: SHA1 hash safety
Date: Sat, 16 Apr 2005 10:58:15 -0400 (EDT)
Lines: 60
Message-ID: <Pine.LNX.4.61.0504161040310.29343@cag.csail.mit.edu>
References: <Pine.LNX.4.62.0504160519330.21837@qynat.qvtvafvgr.pbz>   
 <20050416123155.GA19908@elte.hu>    <Pine.LNX.4.62.0504160542190.21837@qynat.qvtvafvgr.pbz>
 <4261132A.3090907@khandalf.com>
Mime-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII; format=flowed
Cc: David Lang <david.lang@digitalinsight.com>,
	Ingo Molnar <mingo@elte.hu>, git@vger.kernel.org
X-From: git-owner@vger.kernel.org Sat Apr 16 16:56:07 2005
Return-path: <git-owner@vger.kernel.org>
Received: from vger.kernel.org ([12.107.209.244])
	by ciao.gmane.org with esmtp (Exim 4.43)
	id 1DMoiL-0002va-CW
	for gcvg-git@gmane.org; Sat, 16 Apr 2005 16:56:05 +0200
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S262677AbVDPO7B (ORCPT <rfc822;gcvg-git@m.gmane.org>);
	Sat, 16 Apr 2005 10:59:01 -0400
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S262679AbVDPO7B
	(ORCPT <rfc822;git-outgoing>); Sat, 16 Apr 2005 10:59:01 -0400
Received: from sincerity-forever.csail.mit.edu ([128.30.67.31]:51863 "EHLO
	sincerity-forever.csail.mit.edu") by vger.kernel.org with ESMTP
	id S262677AbVDPO6k (ORCPT <rfc822;git@vger.kernel.org>);
	Sat, 16 Apr 2005 10:58:40 -0400
Received: from catfish.lcs.mit.edu ([128.30.67.25] helo=cag.csail.mit.edu)
	by sincerity-forever.csail.mit.edu with esmtp (Exim 3.36 #1 (Debian))
	id 1DMoka-0007kk-00; Sat, 16 Apr 2005 10:58:24 -0400
To: omb@bluewin.ch
In-Reply-To: <4261132A.3090907@khandalf.com>
Sender: git-owner@vger.kernel.org
Precedence: bulk
X-Mailing-List: git@vger.kernel.org
Status: RO

On Sat, 16 Apr 2005, Brian O'Mahoney wrote:

> (1) I _have_ seen real-life collisions with MD5, in the context of
>    Document management systems containing ~10^6 ms-WORD documents.

Dude!  You could have been *famous*!  Why the 
aitch-ee-double-hockey-sticks didn't you publish this when you found it?
Seriously, man.

Even given the known weaknesses in MD5, it would take much more than a 
million documents to find MD5 collisions.  I can only conclude that the 
hash was being used incorrectly; most likely truncated (my wild-ass guess 
would be to 32 bits; a collision is likely with > 50% probability in a 
million document store for a hash of less than 40 bits).

I know the current state of the art here.  It's going to take more than 
just hearsay to convince me that full 128-bit MD5 collisions are likely. 
I believe there are only two or so known to exist so far, and those were 
found by a research team in China (which, yes, is fairly famous among the 
cryptographic community now after publishing a paper consisting of little 
apart from the two collisions themselves).

Please, let's talk about hash collisions responsibly.  I posted earlier 
about the *actual computed probability* of finding two files with an SHA-1 
collision before the sun goes supernova.  It's 10^28 to 1 against.
The recent cryptographic works has shown that there are certain situations 
where a decent amount of computer work (2^69 operations) can produce two 
sequences with the same hash, but these sequences are not freely chosen; 
they've got very specific structure.  This attack does not apply to 
(effectively) random files sitting in a SCM.
   http://www.schneier.com/blog/archives/2005/02/sha1_broken.html

That said, Linux's widespread use means that it may not be unimaginable 
for an attacker to devote this amount of resources to an attack, which 
would probably involve first committing some specially structured file to 
the SCM (but would Linus accept it?) and then silently corrupting said 
file via a SHA1 collision to toggle some bits (which would presumably Do 
Evil).  Thus hashes other than SHA1 really ought to be considered...

...but the cryptographic community has not yet come to a conclusion on 
what the replacement ought to be.  These attacks are so new that we don't 
really understand what it is about the structure of SHA1 which makes them 
possible, which makes it hard to determine which other hashes are 
similarly vulnerable.  It will take time.

I believe Linus has already stated on this list that his plan is to 
eventually provide a tool for bulk migration of an existing SHA1 git 
repository to a new hash type.   Basically munging through the repository 
in bulk, replacing all the hashes.  This seems a perfectly adequate 
strategy at the moment.
  --scott

WASHTUB Panama Minister Moscow explosives KUGOWN hack Marxist LPMEDLEY 
genetic immediate radar SCRANTON COBRA JANE KGB Shoal Bay atomic Bejing
                          ( http://cscott.net/ )
-
To unsubscribe from this list: send the line "unsubscribe git" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html



From news@gmane.org Tue Mar 04 03:33:20 2003
From: Francois Romieu <romieu@fr.zoreil.com>
Subject: Re: full kernel history, in patchset format
Date: Sat, 16 Apr 2005 17:08:17 +0200
Lines: 28
Message-ID: <20050416150816.GA4943@electric-eye.fr.zoreil.com>
References: <20050416131528.GB19908@elte.hu>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Cc: git@vger.kernel.org
X-From: git-owner@vger.kernel.org Sat Apr 16 17:06:22 2005
Return-path: <git-owner@vger.kernel.org>
Received: from vger.kernel.org ([12.107.209.244])
	by ciao.gmane.org with esmtp (Exim 4.43)
	id 1DMosI-0003Ym-1I
	for gcvg-git@gmane.org; Sat, 16 Apr 2005 17:06:22 +0200
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S262678AbVDPPJ7 (ORCPT <rfc822;gcvg-git@m.gmane.org>);
	Sat, 16 Apr 2005 11:09:59 -0400
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S262679AbVDPPJ7
	(ORCPT <rfc822;git-outgoing>); Sat, 16 Apr 2005 11:09:59 -0400
Received: from electric-eye.fr.zoreil.com ([213.41.134.224]:2753 "EHLO
	fr.zoreil.com") by vger.kernel.org with ESMTP id S262678AbVDPPJ5
	(ORCPT <rfc822;git@vger.kernel.org>);
	Sat, 16 Apr 2005 11:09:57 -0400
Received: from electric-eye.fr.zoreil.com (localhost.localdomain [127.0.0.1])
	by fr.zoreil.com (8.13.1/8.12.1) with ESMTP id j3GF8M5T005310;
	Sat, 16 Apr 2005 17:08:22 +0200
Received: (from romieu@localhost)
	by electric-eye.fr.zoreil.com (8.13.1/8.13.1/Submit) id j3GF8HWw005309;
	Sat, 16 Apr 2005 17:08:17 +0200
To: Ingo Molnar <mingo@elte.hu>
Content-Disposition: inline
In-Reply-To: <20050416131528.GB19908@elte.hu>
User-Agent: Mutt/1.4.1i
X-Organisation: Land of Sunshine Inc.
Sender: git-owner@vger.kernel.org
Precedence: bulk
X-Mailing-List: git@vger.kernel.org
Status: RO

Ingo Molnar <mingo@elte.hu> :
[...]
> the history data starts at 2.4.0 and ends at 2.6.12-rc2. I've included a 
> script that will apply all the patches in order and will create a 
> pristine 2.6.12-rc2 tree.

127 weeks of bk-commit mail for the 2.6 branch alone since october 2002
provides more than 44000 messages here. The figures are surprisingly
different.

> it needed many hours to finish, on a very fast server with tons of RAM, 
> and it also needed a fair amount of manual work to extract it and to 
> make it usable, so i guessed others might want to use the end result as 
> well, to try and generate large GIT repositories from them (or to run 
> analysis over the patches, etc.).

Has anyone already compared the (split/digested) content of the ChangeLog
file with the commit messages ? It raises the interesting question of
inserting the merge messages/patches in the sequence at the right place
but I'd like to know if someone met other issues.

--
Ueimor
-
To unsubscribe from this list: send the line "unsubscribe git" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html



From news@gmane.org Tue Mar 04 03:33:20 2003
From: "C. Scott Ananian" <cscott@cscott.net>
Subject: Re: space compression (again)
Date: Sat, 16 Apr 2005 11:11:00 -0400 (EDT)
Lines: 33
Message-ID: <Pine.LNX.4.61.0504161101470.29343@cag.csail.mit.edu>
References: <Pine.LNX.4.61.0504151232160.27637@cag.csail.mit.edu>
 <Pine.LNX.4.58.0504151117360.7211@ppc970.osdl.org>
 <Pine.LNX.4.61.0504151437100.27637@cag.csail.mit.edu>
 <Pine.LNX.4.58.0504151210590.7211@ppc970.osdl.org> <20050416143905.GA10370@macavity>
Mime-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII; format=flowed
Cc: git@vger.kernel.org
X-From: git-owner@vger.kernel.org Sat Apr 16 17:07:39 2005
Return-path: <git-owner@vger.kernel.org>
Received: from vger.kernel.org ([12.107.209.244])
	by ciao.gmane.org with esmtp (Exim 4.43)
	id 1DMotS-0003do-R4
	for gcvg-git@gmane.org; Sat, 16 Apr 2005 17:07:35 +0200
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S262679AbVDPPLO (ORCPT <rfc822;gcvg-git@m.gmane.org>);
	Sat, 16 Apr 2005 11:11:14 -0400
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S262680AbVDPPLO
	(ORCPT <rfc822;git-outgoing>); Sat, 16 Apr 2005 11:11:14 -0400
Received: from sincerity-forever.csail.mit.edu ([128.30.67.31]:40600 "EHLO
	sincerity-forever.csail.mit.edu") by vger.kernel.org with ESMTP
	id S262679AbVDPPLM (ORCPT <rfc822;git@vger.kernel.org>);
	Sat, 16 Apr 2005 11:11:12 -0400
Received: from catfish.lcs.mit.edu ([128.30.67.25] helo=cag.csail.mit.edu)
	by sincerity-forever.csail.mit.edu with esmtp (Exim 3.36 #1 (Debian))
	id 1DMowv-0007pf-00; Sat, 16 Apr 2005 11:11:09 -0400
To: Martin Uecker <muecker@gmx.de>
In-Reply-To: <20050416143905.GA10370@macavity>
Sender: git-owner@vger.kernel.org
Precedence: bulk
X-Mailing-List: git@vger.kernel.org
Status: RO

On Sat, 16 Apr 2005, Martin Uecker wrote:

> The right thing (TM) is to switch from SHA1 of compressed
> content for the complete monolithic file to a merkle hash tree
> of the uncompressed content. This would make the hash
> independent of the actual storage method (chunked or not).

It would certainly be nice to change to a hash of the uncompressed 
content, rather than a hash of the compressed content, but it's not 
strictly necessary, since files are fetched all at once: there's not 'read 
subrange' operation on blobs.

I assume 'merkle hash tree' is talking about:
   http://www.open-content.net/specs/draft-jchapweske-thex-02.html
..which is very interesting, but not quite what I was thinking.
The merkle hash approach seems to require fixed chunk boundaries.
The rsync approach does not use fixed chunk boundaries; this is necessary 
to ensure good storage reuse for the expected case (ie; inserting a single 
line at the start or in the middle of the file, which changes all the 
chunk boundaries).

Further, in the absence of subrange reads on blobs, it's not entirely 
clear what using a merkle hash would buy you.
  --scott

WASHTUB supercomputer security Mk 48 justice ODUNIT radar COBRA JANE 
SSBN 731 BATF KUJUMP SECANT operation class struggle SYNCARP KGB ODACID
                          ( http://cscott.net/ )
-
To unsubscribe from this list: send the line "unsubscribe git" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html



From news@gmane.org Tue Mar 04 03:33:20 2003
From: Petr Baudis <pasky@ucw.cz>
Subject: Re: Re: SHA1 hash safety
Date: Sat, 16 Apr 2005 17:11:17 +0200
Lines: 35
Message-ID: <20050416151116.GC19099@pasky.ji.cz>
References: <Pine.LNX.4.62.0504160519330.21837@qynat.qvtvafvgr.pbz> <20050416123155.GA19908@elte.hu> <Pine.LNX.4.62.0504160542190.21837@qynat.qvtvafvgr.pbz> <4261132A.3090907@khandalf.com> <Pine.LNX.4.61.0504161040310.29343@cag.csail.mit.edu>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Cc: omb@bluewin.ch, David Lang <david.lang@digitalinsight.com>,
	Ingo Molnar <mingo@elte.hu>, git@vger.kernel.org
X-From: git-owner@vger.kernel.org Sat Apr 16 17:07:53 2005
Return-path: <git-owner@vger.kernel.org>
Received: from vger.kernel.org ([12.107.209.244])
	by ciao.gmane.org with esmtp (Exim 4.43)
	id 1DMotZ-0003eJ-Cn
	for gcvg-git@gmane.org; Sat, 16 Apr 2005 17:07:41 +0200
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S262680AbVDPPLV (ORCPT <rfc822;gcvg-git@m.gmane.org>);
	Sat, 16 Apr 2005 11:11:21 -0400
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S262681AbVDPPLV
	(ORCPT <rfc822;git-outgoing>); Sat, 16 Apr 2005 11:11:21 -0400
Received: from w241.dkm.cz ([62.24.88.241]:14830 "HELO machine.sinus.cz")
	by vger.kernel.org with SMTP id S262680AbVDPPLS (ORCPT
	<rfc822;git@vger.kernel.org>); Sat, 16 Apr 2005 11:11:18 -0400
Received: (qmail 25863 invoked by uid 2001); 16 Apr 2005 15:11:17 -0000
To: "C. Scott Ananian" <cscott@cscott.net>
Content-Disposition: inline
In-Reply-To: <Pine.LNX.4.61.0504161040310.29343@cag.csail.mit.edu>
User-Agent: Mutt/1.4i
X-message-flag: Outlook : A program to spread viri, but it can do mail too.
Sender: git-owner@vger.kernel.org
Precedence: bulk
X-Mailing-List: git@vger.kernel.org
Status: RO

Dear diary, on Sat, Apr 16, 2005 at 04:58:15PM CEST, I got a letter
where "C. Scott Ananian" <cscott@cscott.net> told me that...
> On Sat, 16 Apr 2005, Brian O'Mahoney wrote:
> 
> >(1) I _have_ seen real-life collisions with MD5, in the context of
> >   Document management systems containing ~10^6 ms-WORD documents.
> 
> Dude!  You could have been *famous*!  Why the 
> aitch-ee-double-hockey-sticks didn't you publish this when you found it?
> Seriously, man.
> 
> Even given the known weaknesses in MD5, it would take much more than a 
> million documents to find MD5 collisions.  I can only conclude that the 
> hash was being used incorrectly; most likely truncated (my wild-ass guess 
> would be to 32 bits; a collision is likely with > 50% probability in a 
> million document store for a hash of less than 40 bits).
> 
> I know the current state of the art here.  It's going to take more than 
> just hearsay to convince me that full 128-bit MD5 collisions are likely. 
> I believe there are only two or so known to exist so far, and those were 
> found by a research team in China (which, yes, is fairly famous among the 
> cryptographic community now after publishing a paper consisting of little 
> apart from the two collisions themselves).

http://cryptography.hyperlink.cz/MD5_collisions.html

-- 
				Petr "Pasky" Baudis
Stuff: http://pasky.or.cz/
C++: an octopus made by nailing extra legs onto a dog. -- Steve Taylor
-
To unsubscribe from this list: send the line "unsubscribe git" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html



From news@gmane.org Tue Mar 04 03:33:20 2003
From: Linus Torvalds <torvalds@osdl.org>
Subject: Re: [PATCH 3/2] merge-trees script for Linus git
Date: Sat, 16 Apr 2005 08:28:50 -0700 (PDT)
Lines: 116
Message-ID: <Pine.LNX.4.58.0504160820320.7211@ppc970.osdl.org>
References: <Pine.LNX.4.58.0504140201130.7211@ppc970.osdl.org>
 <20050414121624.GZ25711@pasky.ji.cz> <7vll7lqlbg.fsf@assigned-by-dhcp.cox.net>
 <20050414193507.GA22699@pasky.ji.cz> <7vmzs1osv1.fsf@assigned-by-dhcp.cox.net>
 <20050414233159.GX22699@pasky.ji.cz> <7v7jj4q2j2.fsf@assigned-by-dhcp.cox.net>
 <20050414223039.GB28082@64m.dyndns.org> <7vfyxsmqmk.fsf@assigned-by-dhcp.cox.net>
 <20050415062807.GA29841@64m.dyndns.org> <7vfyxsi9bq.fsf@assigned-by-dhcp.cox.net>
 <7vaco0i3t9.fsf_-_@assigned-by-dhcp.cox.net> <Pine.LNX.4.58.0504151138490.7211@ppc970.osdl.org>
 <7vmzrzhkd3.fsf@assigned-by-dhcp.cox.net> <7vfyxrhfsw.fsf_-_@assigned-by-dhcp.cox.net>
 <7vmzrzfwe4.fsf_-_@assigned-by-dhcp.cox.net> <Pine.LNX.4.58.0504151755590.7211@ppc970.osdl.org>
 <7v7jj3fjky.fsf@assigned-by-dhcp.cox.net> <Pine.LNX.4.58.0504152152580.7211@ppc970.osdl.org>
 <Pine.LNX.4.58.0504152256520.7211@ppc970.osdl.org> <7v
Mime-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Cc: git@vger.kernel.org
X-From: git-owner@vger.kernel.org Sat Apr 16 17:23:43 2005
Return-path: <git-owner@vger.kernel.org>
Received: from vger.kernel.org ([12.107.209.244])
	by ciao.gmane.org with esmtp (Exim 4.43)
	id 1DMp94-0004jh-Ew
	for gcvg-git@gmane.org; Sat, 16 Apr 2005 17:23:42 +0200
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S262681AbVDPP1M (ORCPT <rfc822;gcvg-git@m.gmane.org>);
	Sat, 16 Apr 2005 11:27:12 -0400
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S262682AbVDPP1M
	(ORCPT <rfc822;git-outgoing>); Sat, 16 Apr 2005 11:27:12 -0400
Received: from fire.osdl.org ([65.172.181.4]:53470 "EHLO smtp.osdl.org")
	by vger.kernel.org with ESMTP id S262681AbVDPP07 (ORCPT
	<rfc822;git@vger.kernel.org>); Sat, 16 Apr 2005 11:26:59 -0400
Received: from shell0.pdx.osdl.net (fw.osdl.org [65.172.181.6])
	by smtp.osdl.org (8.12.8/8.12.8) with ESMTP id j3GFQqs4021850
	(version=TLSv1/SSLv3 cipher=EDH-RSA-DES-CBC3-SHA bits=168 verify=NO);
	Sat, 16 Apr 2005 08:26:53 -0700
Received: from localhost (shell0.pdx.osdl.net [10.9.0.31])
	by shell0.pdx.osdl.net (8.13.1/8.11.6) with ESMTP id j3GFQpKR017740;
	Sat, 16 Apr 2005 08:26:52 -0700
To: Junio C Hamano <junkio@cox.net>
In-Reply-To: <7vis2ncf8j.fsf@assigned-by-dhcp.cox.net>
X-Spam-Status: No, hits=0 required=5 tests=
X-Spam-Checker-Version: SpamAssassin 2.63-osdl_revision__1.35__
X-MIMEDefang-Filter: osdl$Revision: 1.109 $
X-Scanned-By: MIMEDefang 2.36
Sender: git-owner@vger.kernel.org
Precedence: bulk
X-Mailing-List: git@vger.kernel.org
Status: RO



On Sat, 16 Apr 2005, Junio C Hamano wrote:
> 
> LT> NOTE NOTE NOTE! I could make "read-tree" do some of these nontrivial 
> LT> merges, but I ended up deciding that only the "matches in all three 
> LT> states" thing collapses by default.
> 
>  * Understood and agreed.

Having slept on it, I think I'll merge all the trivial cases that don't 
involve a file going away or being added. Ie if the file is in all three 
trees, but it's the same in two of them, we know what to do.

That way we'll leave thigns where the tree itself changed (files added or 
removed at any point) and/or cases where you actually need a 3-way merge.

> The userland merge policies need ways to extract the stage
> information and manipulate them.  Am I correct to say that you
> mean by "ls-files -l" the extracting part?

No, I meant "show-files", since we need to show the index, not a tree (no 
valid tree can ever have the "modes" information, since (a) it doesn't 
have the space for it anyway and (b) we refuse to write out a dirty index 
file.



> 
> LT> I should make "ls-files" have a "-l" format, which shows the
> LT> index and the mode for each file too.
> 
> You probably meant "ls-tree".  You used the word "mode" but it
> already shows the mode so I take it to mean "stage".  Perhaps
> something like this?
> 
> $ ls-tree -l -r 49c200191ba2e3cd61978672a59c90e392f54b8b
> 100644	blob	fe2a4177a760fd110e78788734f167bd633be8de	COPYING
> 100644	blob	b39b4ea37586693dd707d1d0750a9b580350ec50:1	man/frotz.6
> 100644	blob	b39b4ea37586693dd707d1d0750a9b580350ec50:2	man/frotz.6
> 100664	blob	eeed997e557fb079f38961354473113ca0d0b115:3	man/frotz.6

Apart from the fact that it would be

	show-files -l

since there are no tree objects that can have anything but fully merged
state, yes.

> Assuming that you would be working on that, I'd like to take the
> dircache manipulation part.  Let's think about the minimally
> necessary set of operations:
> 
>  * The merge policy decides to take one of the existing stage.
> 
>    In this case we need a way to register a known mode/sha1 at a
>    path.  We already have this as "update-cache --cacheinfo".
>    We just need to make sure that when "update-cache" puts
>    things at stage 0 it clears other stages as well.
> 
>  * The merge policy comes up with a desired blob somewhere on
>    the filesystem (perhaps by running an external merge
>    program).  It wants to register it as the result of the
>    merge.
> 
>    We could do this today by first storing the "desired blob"
>    in a temporary file somewhere in the path the dircache
>    controls, "update-cache --add" the temporary file, ls-tree to
>    find its mode/sha1, "update-cache --remove" the temporary
>    file and finally "update-cache --cacheinfo" the mode/sha1.
>    This is workable but clumsy.  How about:
> 
>    $ update-cache --graft [--add] desired-blob path
> 
>    to say "I want to register mode/sha1 from desired-blob, which
>    may not be of verify_path() satisfying name, at path in the
>    dircache"?
> 
>  * The merge policy decides to delete the path.
> 
>    We could do this today by first stashing away the file at the
>    path if it exists, "update-cache --remove" it, and restore
>    if necessary.  This is again workable but clumsy.  How about:
> 
>    $ update-cache --force-remove path
> 
>    to mean "I want to remove the path from dircache even though
>    it may exist in my working tree"?

Yes.

> Am I on the right track?

Exactly.

> You might want to go even lower level by letting them say
> something like:
> 
>  * update-cache --register-stage mode sha1 stage path
> 
>    Registers the mode/sha1 at stage for path.  Does not look at
>    the working tree.  stage is [0-3]

I'd prefer not. I'd avoid playing games with the stages at any other level
than the "full tree" level until we show a real need for it.

Let's go with the known-needed minimal cases that are high-level enough to
make the scripting simple, and see if there is any reason to ever touch
the tree any other way.

		Linus
-
To unsubscribe from this list: send the line "unsubscribe git" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html



