From news@gmane.org Tue Mar 04 03:33:20 2003
From: Linus Torvalds <torvalds@osdl.org>
Subject: Re: [ANNOUNCE] git-pasky-0.6.2 && heads-up on upcoming changes
Date: Wed, 20 Apr 2005 15:09:06 -0700 (PDT)
Lines: 48
Message-ID: <Pine.LNX.4.58.0504201503050.6467@ppc970.osdl.org>
References: <20050420205633.GC19112@pasky.ji.cz> <20050420211919.GA20129@kroah.com>
 <20050420215117.GJ19112@pasky.ji.cz>
Mime-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Cc: Greg KH <greg@kroah.com>, git@vger.kernel.org
X-From: git-owner@vger.kernel.org Thu Apr 21 00:04:43 2005
Return-path: <git-owner@vger.kernel.org>
Received: from vger.kernel.org ([12.107.209.244])
	by ciao.gmane.org with esmtp (Exim 4.43)
	id 1DONHl-0005Y2-44
	for gcvg-git@gmane.org; Thu, 21 Apr 2005 00:03:05 +0200
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S261830AbVDTWHT (ORCPT <rfc822;gcvg-git@m.gmane.org>);
	Wed, 20 Apr 2005 18:07:19 -0400
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S261832AbVDTWHT
	(ORCPT <rfc822;git-outgoing>); Wed, 20 Apr 2005 18:07:19 -0400
Received: from fire.osdl.org ([65.172.181.4]:27327 "EHLO smtp.osdl.org")
	by vger.kernel.org with ESMTP id S261830AbVDTWHL (ORCPT
	<rfc822;git@vger.kernel.org>); Wed, 20 Apr 2005 18:07:11 -0400
Received: from shell0.pdx.osdl.net (fw.osdl.org [65.172.181.6])
	by smtp.osdl.org (8.12.8/8.12.8) with ESMTP id j3KM78s4009654
	(version=TLSv1/SSLv3 cipher=EDH-RSA-DES-CBC3-SHA bits=168 verify=NO);
	Wed, 20 Apr 2005 15:07:08 -0700
Received: from localhost (shell0.pdx.osdl.net [10.9.0.31])
	by shell0.pdx.osdl.net (8.13.1/8.11.6) with ESMTP id j3KM77LF031358;
	Wed, 20 Apr 2005 15:07:07 -0700
To: Petr Baudis <pasky@ucw.cz>
In-Reply-To: <20050420215117.GJ19112@pasky.ji.cz>
X-Spam-Status: No, hits=0 required=5 tests=
X-Spam-Checker-Version: SpamAssassin 2.63-osdl_revision__1.35__
X-MIMEDefang-Filter: osdl$Revision: 1.109 $
X-Scanned-By: MIMEDefang 2.36
Sender: git-owner@vger.kernel.org
Precedence: bulk
X-Mailing-List: git@vger.kernel.org
Status: RO



On Wed, 20 Apr 2005, Petr Baudis wrote:
> 
> Grm. Cg is also name of some scary NVidia thing, and cog is GNOME
> Configurator. CGT are Chimera Grid Tools, but I think we can clash
> with those - at least *I* wouldn't mind. ;-)

I realize that there is probably a law that there has to be a space, but I 
actually personally use tab-completion all the time, and in many ways 
prefer a name that can be completed without having to play games with 
magic bash completion files.

So how about using a dash instead of a space, and making things be

	cg-pull
	cg-update

etc? You can link them all to the same script if you don't like having 
multiple scripts, and just match with

	case "$0" in
	*-pull)
		...
		;;
	*-update)
		...
		;;

or something.

Yeah, yeah, it looks different from "cvs update", but dammit, wouldn't it 
be cool to just write "cg-<tab><tab>" and see the command choices? Or 
"cg-up<tab>" and get cg-update done for you..

Just because rcs/cvs/everybody-and-his-dog thinks it is cool to have a 
space there and have different meaning for flags depending on whether they 
are before the command or after the command doesn't mean that they are 
necessarily right..

Just an idea,

		Linus
-
To unsubscribe from this list: send the line "unsubscribe git" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html



From news@gmane.org Tue Mar 04 03:33:20 2003
From: David Greaves <david@dgreaves.com>
Subject: Re: Git hangs while executing commit-tree
Date: Wed, 20 Apr 2005 23:08:16 +0100
Lines: 84
Message-ID: <4266D2D0.5000503@dgreaves.com>
References: <200504202228.35652.rhys@rhyshardwick.co.uk> <Pine.LNX.4.58.0504201446510.6467@ppc970.osdl.org>
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII; format=flowed
Content-Transfer-Encoding: 7bit
Cc: Rhys Hardwick <rhys@rhyshardwick.co.uk>, git@vger.kernel.org
X-From: git-owner@vger.kernel.org Thu Apr 21 00:06:08 2005
Return-path: <git-owner@vger.kernel.org>
Received: from vger.kernel.org ([12.107.209.244])
	by ciao.gmane.org with esmtp (Exim 4.43)
	id 1DONJ5-0005l7-2g
	for gcvg-git@gmane.org; Thu, 21 Apr 2005 00:04:27 +0200
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S261723AbVDTWIq (ORCPT <rfc822;gcvg-git@m.gmane.org>);
	Wed, 20 Apr 2005 18:08:46 -0400
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S261823AbVDTWIq
	(ORCPT <rfc822;git-outgoing>); Wed, 20 Apr 2005 18:08:46 -0400
Received: from s2.ukfsn.org ([217.158.120.143]:33951 "EHLO mail.ukfsn.org")
	by vger.kernel.org with ESMTP id S261723AbVDTWIm (ORCPT
	<rfc822;git@vger.kernel.org>); Wed, 20 Apr 2005 18:08:42 -0400
Received: from localhost (lucy.ukfsn.org [127.0.0.1])
	by mail.ukfsn.org (Postfix) with ESMTP
	id 24FBEE6D53; Wed, 20 Apr 2005 23:06:55 +0100 (BST)
Received: from mail.ukfsn.org ([127.0.0.1])
 by localhost (lucy.ukfsn.org [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id 01953-05; Wed, 20 Apr 2005 23:06:55 +0100 (BST)
Received: from oak.dgreaves.com (modem-1485.lemur.dialup.pol.co.uk [217.135.133.205])
	by mail.ukfsn.org (Postfix) with ESMTP
	id 7EE81E6D73; Wed, 20 Apr 2005 23:06:50 +0100 (BST)
Received: from ash.dgreaves.com ([10.0.0.90])
	by oak.dgreaves.com with esmtp (Exim 4.20)
	id 1DONMm-0000zc-RL; Wed, 20 Apr 2005 23:08:16 +0100
User-Agent: Debian Thunderbird 1.0 (X11/20050116)
X-Accept-Language: en-us, en
To: Linus Torvalds <torvalds@osdl.org>
In-Reply-To: <Pine.LNX.4.58.0504201446510.6467@ppc970.osdl.org>
X-Enigmail-Version: 0.90.0.0
X-Enigmail-Supports: pgp-inline, pgp-mime
Sender: git-owner@vger.kernel.org
Precedence: bulk
X-Mailing-List: git@vger.kernel.org
Status: RO

Linus Torvalds wrote:
> 
> On Wed, 20 Apr 2005, Rhys Hardwick wrote:
> 
>>rhys@metatron:~/repo/tmp.repo$ commit-tree  c80156fafbac377ab35beb076090c8320f874f91
>>Committing initial tree c80156fafbac377ab35beb076090c8320f874f91
>> 
>>At this point, the command seems to be just waiting.
> 
> 
> That's _exactly_ what it's doing. It's waiting for you to write a commit 
> message.
> 
> Something like
> 
> 	This is my initial commit of Hello World!
> 	^D
> 
> will make it happy.
> 
> Alternatively, you can certainly just write your message beforehand with 
> an editor and just pipe it into commit-tree.
> 
> 			Linus

When someone commits the docs I'll submit the next patch for the README:

commit-tree
	commit-tree <sha1> [-p <parent sha1>...] < changelog

Creates a new commit object based on the provided tree object and
emits the new commit object id on stdout. If no parent is given then
it is considered to be an initial tree.

A commit comment is read from stdin (max 999 chars)

A commit object usually has 1 parent (a commit after a change) or 2
parents (a merge) although there is no reason it cannot have more than
2 parents.

While a tree represents a particular directory state of a working
directory, a commit represents that state in "time", and explains how
to get there.

Normally a commit would identify a new "HEAD" state, and while git
doesn't care where you save the note about that state, in practice we
tend to just write the result to the file ".git/HEAD", so that we can
always see what the last committed state was.

Options

<sha1>
	An existing tree object

-p <parent sha1>
	Each -p indicates a the id of a parent commit object.
	

Commit Information

A commit encapsulates:
	all parent object ids
	author name, email and date
	committer name and email and the commit time.

If not provided, commit-tree uses your name, hostname and domain to
provide author and committer info. This can be overridden using the
following environment variables.
	AUTHOR_NAME
	AUTHOR_EMAIL
	AUTHOR_DATE
	COMMIT_AUTHOR_NAME
	COMMIT_AUTHOR_EMAIL
(nb <,> and CRs are stripped)

see also: write-tree

David
-- 
-
To unsubscribe from this list: send the line "unsubscribe git" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html



From news@gmane.org Tue Mar 04 03:33:20 2003
From: Tom Lord <lord@emf.net>
Subject: on when to checksum
Date: Wed, 20 Apr 2005 15:25:07 -0700 (PDT)
Lines: 52
Message-ID: <200504202225.PAA15992@emf.net>
Cc: torvalds@osdl.org
X-From: git-owner@vger.kernel.org Thu Apr 21 00:22:33 2005
Return-path: <git-owner@vger.kernel.org>
Received: from vger.kernel.org ([12.107.209.244])
	by ciao.gmane.org with esmtp (Exim 4.43)
	id 1DONZf-00087q-Jt
	for gcvg-git@gmane.org; Thu, 21 Apr 2005 00:21:35 +0200
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S261834AbVDTWZ0 (ORCPT <rfc822;gcvg-git@m.gmane.org>);
	Wed, 20 Apr 2005 18:25:26 -0400
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S261835AbVDTWZS
	(ORCPT <rfc822;git-outgoing>); Wed, 20 Apr 2005 18:25:18 -0400
Received: from emf.emf.net ([205.149.0.19]:38670 "EHLO emf.net")
	by vger.kernel.org with ESMTP id S261834AbVDTWZJ (ORCPT
	<rfc822;git@vger.kernel.org>); Wed, 20 Apr 2005 18:25:09 -0400
Received: (from lord@localhost) by emf.net (K/K) id PAA15992; Wed, 20 Apr 2005 15:25:07 -0700 (PDT)
To: git@vger.kernel.org
Sender: git-owner@vger.kernel.org
Precedence: bulk
X-Mailing-List: git@vger.kernel.org
Status: RO



Linus, 

I think you have made a mistake by moving the sha1 checksum from the
zipped form to the inflated form.  Here is why:

What you have set in motion with `git' is an ad-hoc p2p network for
sharing filesystem trees -- a global distributed filesystem.  I
believe your starter here has a good chance of taking off to be much,
much larger than just a tool for the kernel.

A subset of your work: blobs and blob databaes, has much wider application
than just sharing trees:  Those parts of `git' can form a very solid 
foundation for many other applications as well.   To the extent `git'
succeeds in the context of the kernel, it will be invested in and
extended and generalized --- and the kernel project will benefit.
So don't ignore those wider applications even though they are not your
focus today: they will generate investment that feeds back to your project.

Your `git' is silent on transports and mirroring of blob databases --
tasks for scripting, sure -- but those elements won't be far behind.

Eventually, slinging around blobs as atomic elements
of payloads will become very common.

The blob handle (aka "address")/payload model of a blob db is very
clean and simple.   In a network of nodes speaking to one and other
by exchanging blobs, I forsee a prominent need for intermediate
nodes that process blobs "blindly" and as quickly as possible.

Blob compression is mostly goofy if regarded just as a way to 
save on (diminishingly cheap) disk space but it is mostly 
sane if regarded as a way to cut the cost of network bandwidth
roughly in half.

Must intermediate nodes inflate the payloads passing through them
or which they cache just to validate them?   That's not a desirable otucome
for many obvious reasonhs.

There *are* concerns about checksumming zips: it is necessary to nail
down the zip process and make sure it is absolutely and permanently
deterministic for this application.   But *that* is the problem to 
solve, not avoid by moving what the checksum refers to.

Thanks,
-t
-
To unsubscribe from this list: send the line "unsubscribe git" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html



