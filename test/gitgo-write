#!/bin/sh
. ts

user_dir="$(pwd)"
export PATH="$user_dir/bin:$PATH"

setup () {
  mkdir -p "$test_dir"
  cd "$test_dir"
  git init
  export GIT_AUTHOR_NAME="John Doe"
  export GIT_AUTHOR_EMAIL="john.doe@example.com"
  export GIT_AUTHOR_DATE="2010-09-08T07:06:05-04:00"
  export GIT_COMMITTER_NAME="John Doe"
  export GIT_COMMITTER_EMAIL="john.doe@example.com"
  export GIT_COMMITTER_DATE="2010-09-08T07:06:05-04:00"
}

teardown () {
  cd "$user_dir"
}

#
# basic
#

test_write_creates_commit_from_stdin  () {
  sha=`printf "Hello world." | gitgo-write`
  assert_status 0 $?

  git log -n1 $sha | assert_output "\
commit $sha
Author: John Doe <john.doe@example.com>
Date:   Wed Sep 8 07:06:05 2010 -0400

    Hello world.
    ---
" -

  git ls-tree $sha | assert_output "" -
}

#
# tags
#

test_write_appends_tags_prefixed_by_colon () {
  sha=`printf "Hello world." | gitgo-write -t a -t b -t c`
  assert_status 0 $?

  git log -n1 $sha | assert_output "\
commit $sha
Author: John Doe <john.doe@example.com>
Date:   Wed Sep 8 07:06:05 2010 -0400

    Hello world.
    ---
    : a
    : b
    : c
" -
}

test_write_ignores_empty_tags () {
  sha=`printf "Hello world." | gitgo-write -t "" -t "  "`
  assert_status 0 $?

  git log -n1 $sha | assert_output "\
commit $sha
Author: John Doe <john.doe@example.com>
Date:   Wed Sep 8 07:06:05 2010 -0400

    Hello world.
    ---
" -
}

#
# parents
#

test_write_appends_parents_prefixed_by_plus () {
  a=`printf "Parent A" | gitgo-write`
  b=`printf "Parent B" | gitgo-write`
  c=`printf "Child"    | gitgo-write $a $b`

  git log $c | assert_output "\
commit $c
Author: John Doe <john.doe@example.com>
Date:   Wed Sep 8 07:06:05 2010 -0400

    Child
    ---
    + $a
    + $b

commit $b
Author: John Doe <john.doe@example.com>
Date:   Wed Sep 8 07:06:05 2010 -0400

    Parent B
    ---

commit $a
Author: John Doe <john.doe@example.com>
Date:   Wed Sep 8 07:06:05 2010 -0400

    Parent A
    ---
" -
}

test_write_ignores_empty_parents () {
  sha=`printf "Hello world." | gitgo-write "" "  "`
  assert_status 0 $?

  git log -n1 $sha | assert_output "\
commit $sha
Author: John Doe <john.doe@example.com>
Date:   Wed Sep 8 07:06:05 2010 -0400

    Hello world.
    ---
" -
}

#
# attachments
#

test_write_stores_attachments_in_tree  () {
  printf "content\n" > file

  sha=$(printf "Hello world." | gitgo-write -a file)
  assert_status 0 $?

  git ls-tree $sha | assert_output "\
100644 blob d95f3ad14dee633a758d2e331151e950dd13e4ed	file
" -
}

test_write_accepts_filenames_with_spaces  () {
  printf "content\n" > "filename with spaces"

  sha=$(printf "Hello world." | gitgo-write -a "filename with spaces")
  assert_status 0 $?

  git ls-tree $sha | assert_output "\
100644 blob d95f3ad14dee633a758d2e331151e950dd13e4ed	filename with spaces
" -
}

test_write_ignores_empty_attachments () {
  sha=`printf "Hello world." | gitgo-write -a "" -a "  "`
  assert_status 0 $?

  git ls-tree $sha | assert_output "" -
}

#
# storage
#

test_write_stores_commit_on_gitgo_branch () {
  sha=`printf "Hello world." | gitgo-write`
  git log --format="%H" gitgo | assert_output "\
$sha
" -
}

test_write_stores_commit_on_b_branch () {
  sha=`printf "Hello world." | gitgo-write -b gitgo-alt`
  git log --format="%H" gitgo-alt | assert_output "\
$sha
" -
}
