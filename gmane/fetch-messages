#!/bin/bash
############################################################################
usage="\
usage: fetch-messages [-h] GROUP [TARGET_DIR]

  Fetch an mbox of messages from gmane. Reads ranges from stdin which should
  be in the format 'START STOP' (STOP is included). Use this pipeline for
  example:

    ./fetch-news gmane.comp.version-control.git 0 1 2 |
    ./parse-news -r |
    ./fetch-messages gmane.comp.version-control.git

  Specify the directory to recieve the messages with TARGET_DIR, which is by
  default working directory. Messages are named according to their index, and
  the mbox for each range will be named like 'START_STOP.mbox'. By default
  fetch-messages will resue an mbox file, if it exists.  Specify -f to force
  a new download.

options:

        -f    force download of mbox files
        -h    prints this help
        -w    write rather than save (see 'man mail')

"
############################################################################

save="save"
force="false"
while getopts "hw" option
do
  case $option in
    f  )  force="true" ;;
    h  )  printf "$usage"
          exit 0 ;;
    w  )  save="write" ;;
    \? )  printf "$usage" | head -n 1
          exit 2 ;;
  esac
done
shift $(($OPTIND - 1))

group="${1}"
target_dir="${2:-$(pwd)}"
if ! [ "$group" ]
then
  printf "no group specified\n"
  exit 1
fi
shift 2

############################################################################

mkdir -p "$target_dir"
while read start stop
do 
  mbox="$target_dir/${start}_${stop}.mbox"
  if ! [ -e "$mbox" ] || [ "$force" = "true" ]
  then curl -s "http://download.gmane.org/$group/$start/$((stop + 1))" > "$mbox"
  fi

  for (( index=$start; index<=$stop; index++ ))
  do
    target="$target_dir/$index"
    rm "$target" >/dev/null 2>&1
    echo "$save $((index - start + 1)) $target"
  done | 
  mail -Nf "$mbox"
done
