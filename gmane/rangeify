#!/usr/bin/env ruby
begin
require 'optparse'

delimiter = " "
exclusive = false
OptionParser.new do |opts|
  opts.banner = %{
usage: #{$0} [options]

  Reads numbers from stdin and organizes them into ranges such that all
  numbers will be accounted for without gaps. Numbers must be sorted and input
  one-per-line.

options:
}.lstrip

  opts.on("-d", "--delimiter STRING", "range delimiter (default space)") do |input|
    delimiter = input
  end

  opts.on("-e", "--exclusive", "exclusive ranges (stop++)") do
    exclusive = true
  end

  opts.on("-h", "--help", "print this help") do
    puts opts
    puts
    exit
  end
end.parse!

start, stop = nil, nil
while line = gets
  unless line =~ /^\d+$/
    raise "not an integer: #{line}"
  end

  num = line.to_i

  case
  when stop.nil?
    start, stop = num, num
  when num == stop + 1
    stop = num
  else
    puts "#{start}#{delimiter}#{exclusive ? stop + 1 : stop}"
    start, stop = nil, nil
  end
end

unless stop.nil?
  puts "#{start}#{delimiter}#{exclusive ? stop + 1 : stop}"
end

rescue Interrupt
  exit 130
rescue Errno::EPIPE 
  exit 0
rescue
  raise if $DEBUG
  $stderr.puts $!.message
  exit 1
end

