#!/bin/bash
############################################################################
progname="${0##*/}"
author="Simon Chiang"
usage="usage: %s [-h] [FILE...]\n"
opt="       %s   %s\n"

while getopts "h" option
do
  case $option in
    h  )  printf "$usage" "$progname"
          printf '
  Parses the gmane archive html into a textual topography.  Reads from
  stdin if FILE is a single dash or no files are specified. Combine with
  download for quick results.

  ./archive.sh gmane.comp.version-control.git 0 1 2 | ./parse_archive

  Produces something like:

    1205 -- Colorized git log
    `- 1208 -- Colorized git log
     `- 1224 -- [PATCH] Colorized git log
      `- 1225 -- [PATCH] Colorized git log
       |- 1227 -- [PATCH] Colorized git log
       `- 1226 -- [PATCH] Colorized git log

'
          printf "options:\n\n"
          printf "$opt" "-h" "prints this help"
          printf "\n"
          exit 0 ;;
    \? )  printf "$usage" "$progname"
          exit 2 ;;
  esac
done
shift $(($OPTIND - 1))

############################################################################

# read files
cat $@ |

# pull out topography and article numbers
sed -e '
/^<tr/!d
s/src/\
src/g
s/href/\
href/g
' |

# rebuilt the topography as text
sed -ne '
/src/ {
  s:src="/short/b+l.png".*: :
  s:src="/short/I+l.png".*:| :
  s:src="/short/T+l.png".*:|- :
  s:src="/short/L+l.png".*:`- :
  s:src="/short/k1+l.png".*::
  s:src="/short/k2+l.png".*::
  s:src="/short/s+l.png".*::
  H
}
/href/ {
  s/[^0-9]*\([0-9]*\)" .*">\(.*\)<\/a.*/\1 -- \2/
  # join all the topography segments 
  H
  s/.*//
  x
  s/\n//g
  # delimit threads with a newline
  s/^\([0-9]\)/\
\1/
  # print it out!
  p
}
'

